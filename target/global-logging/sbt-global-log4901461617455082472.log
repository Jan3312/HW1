[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jan33\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jan33\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (AdoptOpenJDK Java 14.0.2)
[debug]       Load.loadUnit: plugins took 93.3482ms
[debug]       Load.loadUnit: defsScala took 0.2826ms
[debug] [Loading] Scanning directory C:\Users\jan33\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jan33\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.2351 ms
[debug]           Load.resolveProject(global-plugins) took 53.2704ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\jan33\.sbt\1.0\plugins, plugins: List(<none>))) took 104.9235ms
[debug] [Loading] Done in C:\Users\jan33\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 124.117399ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.527999ms
[debug]     Load.loadUnit(file:/C:/Users/jan33/.sbt/1.0/plugins/, ...) took 227.5907ms
[debug]   Load.apply: load took 424.8347ms
[debug]   Load.apply: resolveProjects took 8.199001ms
[debug]   Load.apply: finalTransforms took 76.6664ms
[debug]   Load.apply: config.delegates took 8.0446ms
[debug]   Load.apply: Def.make(settings)... took 879.6021ms
[debug]   Load.apply: structureIndex took 127.9308ms
[debug]   Load.apply: mkStreams took 1.6449ms
[info] loading global plugins from C:\Users\jan33\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3162.4613ms
[debug]           Load.loadUnit: plugins took 29.558201ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\jan33\Desktop\HW1\project
[debug]             Load.loadUnit: mkEval took 5.115701ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jan33\Desktop\HW1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.438799 ms
[info] loading settings for project hw1-build from plugins.sbt,idea1.sbt ...
[debug]               Load.resolveProject(hw1-build) took 3.896201ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hw1-build, base: C:\Users\jan33\Desktop\HW1\project, plugins: List(<none>))) took 7.0476ms
[debug] [Loading] Done in C:\Users\jan33\Desktop\HW1\project, returning: (hw1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 150.428ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.876399ms
[debug]         Load.loadUnit(file:/C:/Users/jan33/Desktop/HW1/project/, ...) took 190.028899ms
[debug]       Load.apply: load took 191.9949ms
[debug]       Load.apply: resolveProjects took 0.1307ms
[debug]       Load.apply: finalTransforms took 11.7929ms
[debug]       Load.apply: config.delegates took 0.500999ms
[debug]       Load.apply: Def.make(settings)... took 88.670699ms
[debug]       Load.apply: structureIndex took 44.005099ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\Users\jan33\Desktop\HW1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 724.3614ms
[debug]     Load.loadUnit: defsScala took 0.003301ms
[debug] [Loading] Scanning directory C:\Users\jan33\Desktop\HW1
[debug]       Load.loadUnit: mkEval took 0.329501ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(dotty.tools.sbtplugin.DottyIDEPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(dotty.tools.sbtplugin.DottyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(dotty.tools.sbtplugin.DottyIDEPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(dotty.tools.sbtplugin.DottyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,dotty.tools.sbtplugin.DottyPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,dotty.tools.sbtplugin.DottyIDEPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.4754 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 45.387999ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\jan33\Desktop\HW1, plugins: List(<none>))) took 51.1726ms
[debug] [Loading] Done in C:\Users\jan33\Desktop\HW1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 116.511801ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.349ms
[debug]   Load.loadUnit(file:/C:/Users/jan33/Desktop/HW1/, ...) took 849.427101ms
[debug] Load.apply: load took 851.9895ms
[debug] Load.apply: resolveProjects took 0.1744ms
[debug] Load.apply: finalTransforms took 38.768599ms
[debug] Load.apply: config.delegates took 0.5316ms
[debug] Load.apply: Def.make(settings)... took 117.315101ms
[debug] Load.apply: structureIndex took 45.6032ms
[debug] Load.apply: mkStreams took 0.002699ms
[info] set current project to dotty-simple (in build file:/C:/Users/jan33/Desktop/HW1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51456 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51456, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dotty-simple (in build file:/C:/Users/jan33/Desktop/HW1/)
[debug] > Exec(idea-shell, None, None)
